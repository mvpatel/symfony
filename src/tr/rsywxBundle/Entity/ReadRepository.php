<?php

namespace tr\rsywxBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * ReadRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ReadRepository extends EntityRepository
{
    public function getReadSummary()
    {
        $em=$this->getEntityManager();
        $q=$em->createQuery('select count(r.id) rc from trrsywxBundle:BookReview r');
        $tmp1=$q->getSingleResult();
        
        $repo=$em->getRepository('trrsywxBundle:BookReview');
        $q=$repo->createQueryBuilder('r')
                ->orderBy('r.id', 'desc')
                ->setMaxResults(1)
                ->getQuery()
                ;
        
        $last=$q->getSingleResult();
        $book=$last->getHeadlineid()->getBookid();
        
        $res=array();
        $res['summary']=$tmp1;
        $res['last']=$last;
        $res['book']=$book;

        return $res;
    } 
    
    public function getResultAndCount($page, $rpp)
    {
        // Get the book count
        $em = $this->getEntityManager();
        $q1 = $em->createQuery('select count(r.id) rc from trrsywxBundle:BookHeadline r');
        $res1 = $q1->getSingleResult();
        $count = $res1['rc'];

        // Now get the wanted result specified by page

        $repo = $em->getRepository('trrsywxBundle:BookHeadline');
        $q2 = $repo->createQueryBuilder('r')
                ->setMaxResults($rpp)
                ->setFirstResult(($page - 1) * $rpp)
                ->orderBy('r.id', 'desc')
                ->getQuery();


        $res2 = $q2->getResult();

        return array($res2, $count);
    }
    
    public function getReviewsById($hid)
    {
        $repo=$this->getEntityManager()->getRepository('trrsywxBundle:BookReview');
        $q=$repo->createQueryBuilder('r')
                ->orderBy('r.datein','asc')
                ->where('r.headlineid=:hid')
                ->setParameter('hid', $hid)
                ->getQuery();
        
        $res=$q->getResult();
        
        return $res;
    } 
}
